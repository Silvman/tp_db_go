// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Silvman/tech-db-forum/models"
)

// ForumGetThreadsOKCode is the HTTP code returned for type ForumGetThreadsOK
const ForumGetThreadsOKCode int = 200

/*ForumGetThreadsOK Информация о ветках обсуждения на форуме.


swagger:response forumGetThreadsOK
*/
type ForumGetThreadsOK struct {

	/*
	  In: Body
	*/
	Payload models.Threads `json:"body,omitempty"`
}

// NewForumGetThreadsOK creates ForumGetThreadsOK with default headers values
func NewForumGetThreadsOK() *ForumGetThreadsOK {

	return &ForumGetThreadsOK{}
}

// WithPayload adds the payload to the forum get threads o k response
func (o *ForumGetThreadsOK) WithPayload(payload models.Threads) *ForumGetThreadsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forum get threads o k response
func (o *ForumGetThreadsOK) SetPayload(payload models.Threads) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForumGetThreadsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.Threads, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// ForumGetThreadsNotFoundCode is the HTTP code returned for type ForumGetThreadsNotFound
const ForumGetThreadsNotFoundCode int = 404

/*ForumGetThreadsNotFound Форум отсутсвует в системе.


swagger:response forumGetThreadsNotFound
*/
type ForumGetThreadsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewForumGetThreadsNotFound creates ForumGetThreadsNotFound with default headers values
func NewForumGetThreadsNotFound() *ForumGetThreadsNotFound {

	return &ForumGetThreadsNotFound{}
}

// WithPayload adds the payload to the forum get threads not found response
func (o *ForumGetThreadsNotFound) WithPayload(payload *models.Error) *ForumGetThreadsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the forum get threads not found response
func (o *ForumGetThreadsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ForumGetThreadsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
