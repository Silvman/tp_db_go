// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Тестовое задание для реализации проекта \"Форумы\" на курсе по базам данных в\nТехнопарке Mail.ru (https://park.mail.ru).\n",
    "title": "forum",
    "version": "0.1.0"
  },
  "basePath": "/api",
  "paths": {
    "/forum/create": {
      "post": {
        "description": "Создание нового форума.\n",
        "summary": "Создание форума",
        "operationId": "forumCreate",
        "parameters": [
          {
            "description": "Данные форума.",
            "name": "forum",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Forum"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Форум успешно создан.\nВозвращает данные созданного форума.\n",
            "schema": {
              "$ref": "#/definitions/Forum"
            }
          },
          "404": {
            "description": "Владелец форума не найден.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Форум уже присутсвует в базе данных.\nВозвращает данные ранее созданного форума.\n",
            "schema": {
              "$ref": "#/definitions/Forum"
            }
          }
        }
      }
    },
    "/forum/{slug}/create": {
      "post": {
        "description": "Добавление новой ветки обсуждения на форум.\n",
        "summary": "Создание ветки",
        "operationId": "threadCreate",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор форума.",
            "name": "slug",
            "in": "path",
            "required": true
          },
          {
            "description": "Данные ветки обсуждения.",
            "name": "thread",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ветка обсуждения успешно создана.\nВозвращает данные созданной ветки обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          },
          "404": {
            "description": "Автор ветки или форум не найдены.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Ветка обсуждения уже присутсвует в базе данных.\nВозвращает данные ранее созданной ветки обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          }
        }
      }
    },
    "/forum/{slug}/details": {
      "get": {
        "description": "Получение информации о форуме по его идентификаторе.\n",
        "summary": "Получение информации о форуме",
        "operationId": "forumGetOne",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор форума.",
            "name": "slug",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о форуме.\n",
            "schema": {
              "$ref": "#/definitions/Forum"
            }
          },
          "404": {
            "description": "Форум отсутсвует в системе.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/forum/{slug}/threads": {
      "get": {
        "description": "Получение списка ветвей обсужления данного форума.\n\nВетви обсуждения выводятся отсортированные по дате создания.\n",
        "summary": "Список ветвей обсужления форума",
        "operationId": "forumGetThreads",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор форума.",
            "name": "slug",
            "in": "path",
            "required": true
          },
          {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "format": "int32",
            "default": 100,
            "description": "Максимальное кол-во возвращаемых записей.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Дата создания ветви обсуждения, с которой будут выводиться записи\n(ветвь обсуждения с указанной датой попадает в результат выборки).\n",
            "name": "since",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Флаг сортировки по убыванию.\n",
            "name": "desc",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветках обсуждения на форуме.\n",
            "schema": {
              "$ref": "#/definitions/Threads"
            }
          },
          "404": {
            "description": "Форум отсутсвует в системе.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/forum/{slug}/users": {
      "get": {
        "description": "Получение списка пользователей, у которых есть пост или ветка обсуждения в данном форуме.\n\nПользователи выводятся отсортированные по nickname в порядке возрастания.\nПорядок сотрировки должен соответсвовать побайтовому сравнение в нижнем регистре.\n",
        "summary": "Пользователи данного форума",
        "operationId": "forumGetUsers",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор форума.",
            "name": "slug",
            "in": "path",
            "required": true
          },
          {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "format": "int32",
            "default": 100,
            "description": "Максимальное кол-во возвращаемых записей.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор пользователя, с которого будут выводиться пользоватли\n(пользователь с данным идентификатором в результат не попадает).\n",
            "name": "since",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Флаг сортировки по убыванию.\n",
            "name": "desc",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о пользователях форума.\n",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "404": {
            "description": "Форум отсутсвует в системе.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/post/{id}/details": {
      "get": {
        "description": "Получение информации о ветке обсуждения по его имени.\n",
        "summary": "Получение информации о ветке обсуждения",
        "operationId": "postGetOne",
        "parameters": [
          {
            "type": "number",
            "format": "int64",
            "description": "Идентификатор сообщения.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "user",
                "forum",
                "thread"
              ],
              "type": "string"
            },
            "description": "Включение полной информации о соответвующем объекте сообщения.\n\nЕсли тип объекта не указан, то полная информация об этих объектах не\nпередаётся.\n",
            "name": "related",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветке обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/PostFull"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Изменение сообщения на форуме.\n\nЕсли сообщение поменяло текст, то оно должно получить отметку ` + "`" + `isEdited` + "`" + `.\n",
        "summary": "Изменение сообщения",
        "operationId": "postUpdate",
        "parameters": [
          {
            "type": "number",
            "format": "int64",
            "description": "Идентификатор сообщения.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Изменения сообщения.",
            "name": "post",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о сообщении.\n",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "404": {
            "description": "Сообщение отсутсвует в форуме.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/service/clear": {
      "post": {
        "description": "Безвозвратное удаление всей пользовательской информации из базы данных.\n",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "summary": "Очистка всех данных в базе",
        "operationId": "clear",
        "responses": {
          "200": {
            "description": "Очистка базы успешно завершена"
          }
        }
      }
    },
    "/service/status": {
      "get": {
        "description": "Получение инфомарции о базе данных.\n",
        "summary": "Получение инфомарции о базе данных",
        "operationId": "status",
        "responses": {
          "200": {
            "description": "Кол-во записей в базе данных, включая помеченные как \"удалённые\".\n",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/thread/{slug_or_id}/create": {
      "post": {
        "description": "Добавление новых постов в ветку обсуждения на форум.\n\nВсе посты, созданные в рамках одного вызова данного метода должны иметь одинаковую дату создания (Post.Created).\n",
        "summary": "Создание новых постов",
        "operationId": "postsCreate",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Список создаваемых постов.",
            "name": "posts",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Посты успешно созданы.\nВозвращает данные созданных постов в том же порядке, в котором их передали на вход метода.\n",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутствует в базе данных.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Хотя бы один родительский пост отсутсвует в текущей ветке обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/thread/{slug_or_id}/details": {
      "get": {
        "description": "Получение информации о ветке обсуждения по его имени.\n",
        "summary": "Получение информации о ветке обсуждения",
        "operationId": "threadGetOne",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветке обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Обновление ветки обсуждения на форуме.\n",
        "summary": "Обновление ветки",
        "operationId": "threadUpdate",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Данные ветки обсуждения.",
            "name": "thread",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThreadUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветке обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/thread/{slug_or_id}/posts": {
      "get": {
        "description": "Получение списка сообщений в данной ветке форуме.\n\nСообщения выводятся отсортированные по дате создания.\n",
        "summary": "Сообщения данной ветви обсуждения",
        "operationId": "threadGetPosts",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          },
          {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "format": "int32",
            "default": 100,
            "description": "Максимальное кол-во возвращаемых записей.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "description": "Идентификатор поста, после которого будут выводиться записи\n(пост с данным идентификатором в результат не попадает).\n",
            "name": "since",
            "in": "query"
          },
          {
            "enum": [
              "flat",
              "tree",
              "parent_tree"
            ],
            "type": "string",
            "default": "flat",
            "description": "Вид сортировки:\n\n * flat - по дате, комментарии выводятся простым списком в порядке создания;\n * tree - древовидный, комментарии выводятся отсортированные в дереве\n   по N штук;\n * parent_tree - древовидные с пагинацией по родительским (parent_tree),\n   на странице N родительских комментов и все комментарии прикрепленные\n   к ним, в древвидном отображение.\n\nПодробности: https://park.mail.ru/blog/topic/view/1191/\n",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Флаг сортировки по убыванию.\n",
            "name": "desc",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о сообщениях форума.\n",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/thread/{slug_or_id}/vote": {
      "post": {
        "description": "Изменение голоса за ветвь обсуждения.\n\nОдин пользователь учитывается только один раз и может изменить своё\nмнение.\n",
        "summary": "Проголосовать за ветвь обсуждения",
        "operationId": "threadVote",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Информация о голосовании пользователя.",
            "name": "vote",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветке обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/{nickname}/create": {
      "post": {
        "description": "Создание нового пользователя в базе данных.\n",
        "summary": "Создание нового пользователя",
        "operationId": "userCreate",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор пользователя.",
            "name": "nickname",
            "in": "path",
            "required": true
          },
          {
            "description": "Данные пользовательского профиля.",
            "name": "profile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Пользователь успешно создан.\nВозвращает данные созданного пользователя.\n",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "409": {
            "description": "Пользователь уже присутсвует в базе данных.\nВозвращает данные ранее созданных пользователей с тем же nickname-ом иои email-ом.\n",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/user/{nickname}/profile": {
      "get": {
        "description": "Получение информации о пользователе форума по его имени.\n",
        "summary": "Получение информации о пользователе",
        "operationId": "userGetOne",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор пользователя.",
            "name": "nickname",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о пользователе.\n",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Пользователь отсутсвует в системе.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Изменение информации в профиле пользователя.\n",
        "summary": "Изменение данных о пользователе",
        "operationId": "userUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор пользователя.",
            "name": "nickname",
            "in": "path",
            "required": true
          },
          {
            "description": "Изменения профиля пользователя.",
            "name": "profile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Актуальная информация о пользователе после изменения профиля.\n",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Пользователь отсутсвует в системе.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Новые данные профиля пользователя конфликтуют с имеющимися пользователями.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Текстовое описание ошибки.\nВ процессе проверки API никаких проверок на содерижимое данного описание не делается.\n",
          "type": "string",
          "readOnly": true,
          "example": "Can't find user with id #42\n"
        }
      }
    },
    "Forum": {
      "description": "Информация о форуме.\n",
      "type": "object",
      "required": [
        "title",
        "user",
        "slug"
      ],
      "properties": {
        "posts": {
          "description": "Общее кол-во сообщений в данном форуме.\n",
          "type": "number",
          "format": "int64",
          "readOnly": true,
          "example": 200000
        },
        "slug": {
          "description": "Человекопонятный URL (https://ru.wikipedia.org/wiki/%D0%A1%D0%B5%D0%BC%D0%B0%D0%BD%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_URL), уникальное поле.",
          "type": "string",
          "format": "identity",
          "pattern": "^(\\d|\\w|-|_)*(\\w|-|_)(\\d|\\w|-|_)*$",
          "x-isnullable": false,
          "example": "pirate-stories"
        },
        "threads": {
          "description": "Общее кол-во ветвей обсуждения в данном форуме.\n",
          "type": "number",
          "format": "int32",
          "readOnly": true,
          "example": 200
        },
        "title": {
          "description": "Название форума.",
          "type": "string",
          "x-isnullable": false,
          "example": "Pirate stories"
        },
        "user": {
          "description": "Nickname пользователя, который отвечает за форум.",
          "type": "string",
          "format": "identity",
          "x-isnullable": false,
          "example": "j.sparrow"
        }
      }
    },
    "Post": {
      "description": "Сообщение внутри ветки обсуждения на форуме.\n",
      "type": "object",
      "required": [
        "author",
        "message"
      ],
      "properties": {
        "author": {
          "description": "Автор, написавший данное сообщение.",
          "type": "string",
          "format": "identity",
          "x-isnullable": false,
          "example": "j.sparrow"
        },
        "created": {
          "description": "Дата создания сообщения на форуме.",
          "type": "string",
          "format": "date-time",
          "x-isnullable": true,
          "readOnly": true
        },
        "forum": {
          "description": "Идентификатор форума (slug) данного сообещния.",
          "type": "string",
          "format": "identity",
          "readOnly": true
        },
        "id": {
          "description": "Идентификатор данного сообщения.",
          "type": "number",
          "format": "int64",
          "readOnly": true
        },
        "isEdited": {
          "description": "Истина, если данное сообщение было изменено.",
          "type": "boolean",
          "x-isnullable": false,
          "readOnly": true
        },
        "message": {
          "description": "Собственно сообщение форума.",
          "type": "string",
          "format": "text",
          "x-isnullable": false,
          "example": "We should be afraid of the Kraken."
        },
        "parent": {
          "description": "Идентификатор родительского сообщения (0 - корневое сообщение обсуждения).\n",
          "type": "number",
          "format": "int64"
        },
        "thread": {
          "description": "Идентификатор ветви (id) обсуждения данного сообещния.",
          "type": "number",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "PostFull": {
      "description": "Полная информация о сообщении, включая связанные объекты.\n",
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/User"
        },
        "forum": {
          "$ref": "#/definitions/Forum"
        },
        "post": {
          "$ref": "#/definitions/Post"
        },
        "thread": {
          "$ref": "#/definitions/Thread"
        }
      }
    },
    "PostUpdate": {
      "description": "Сообщение для обновления сообщения внутри ветки на форуме.\nПустые параметры остаются без изменений.\n",
      "type": "object",
      "properties": {
        "message": {
          "description": "Собственно сообщение форума.",
          "type": "string",
          "format": "text",
          "example": "We should be afraid of the Kraken."
        }
      }
    },
    "Posts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Post"
      }
    },
    "Status": {
      "type": "object",
      "required": [
        "user",
        "forum",
        "thread",
        "post"
      ],
      "properties": {
        "forum": {
          "description": "Кол-во разделов в базе данных.",
          "type": "number",
          "format": "int32",
          "x-isnullable": false,
          "example": 100
        },
        "post": {
          "description": "Кол-во сообщений в базе данных.",
          "type": "number",
          "format": "int64",
          "x-isnullable": false,
          "example": 1000000
        },
        "thread": {
          "description": "Кол-во веток обсуждения в базе данных.",
          "type": "number",
          "format": "int32",
          "x-isnullable": false,
          "example": 1000
        },
        "user": {
          "description": "Кол-во пользователей в базе данных.",
          "type": "number",
          "format": "int32",
          "x-isnullable": false,
          "example": 1000
        }
      }
    },
    "Thread": {
      "description": "Ветка обсуждения на форуме.\n",
      "type": "object",
      "required": [
        "title",
        "author",
        "message"
      ],
      "properties": {
        "author": {
          "description": "Пользователь, создавший данную тему.",
          "type": "string",
          "format": "identity",
          "x-isnullable": false,
          "example": "j.sparrow"
        },
        "created": {
          "description": "Дата создания ветки на форуме.",
          "type": "string",
          "format": "date-time",
          "x-isnullable": true,
          "example": "2017-01-01T00:00:00.000Z"
        },
        "forum": {
          "description": "Форум, в котором расположена данная ветка обсуждения.",
          "type": "string",
          "format": "identity",
          "readOnly": true,
          "example": "pirate-stories"
        },
        "id": {
          "description": "Идентификатор ветки обсуждения.",
          "type": "number",
          "format": "int32",
          "readOnly": true,
          "example": 42
        },
        "message": {
          "description": "Описание ветки обсуждения.",
          "type": "string",
          "format": "text",
          "x-isnullable": false,
          "example": "An urgent need to reveal the hiding place of Davy Jones. Who is willing to help in this matter?"
        },
        "slug": {
          "description": "Человекопонятный URL (https://ru.wikipedia.org/wiki/%D0%A1%D0%B5%D0%BC%D0%B0%D0%BD%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_URL).\nВ данной структуре slug опционален и не может быть числом.\n",
          "type": "string",
          "format": "identity",
          "pattern": "^(\\d|\\w|-|_)*(\\w|-|_)(\\d|\\w|-|_)*$",
          "readOnly": true,
          "example": "jones-cache"
        },
        "title": {
          "description": "Заголовок ветки обсуждения.",
          "type": "string",
          "x-isnullable": false,
          "example": "Davy Jones cache"
        },
        "votes": {
          "description": "Кол-во голосов непосредственно за данное сообщение форума.",
          "type": "number",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "ThreadUpdate": {
      "description": "Сообщение для обновления ветки обсуждения на форуме.\nПустые параметры остаются без изменений.\n",
      "type": "object",
      "properties": {
        "message": {
          "description": "Описание ветки обсуждения.",
          "type": "string",
          "format": "text",
          "example": "An urgent need to reveal the hiding place of Davy Jones. Who is willing to help in this matter?"
        },
        "title": {
          "description": "Заголовок ветки обсуждения.",
          "type": "string",
          "example": "Davy Jones cache"
        }
      }
    },
    "Threads": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Thread"
      }
    },
    "User": {
      "description": "Информация о пользователе.\n",
      "type": "object",
      "required": [
        "fullname",
        "email"
      ],
      "properties": {
        "about": {
          "description": "Описание пользователя.",
          "type": "string",
          "format": "text",
          "example": "This is the day you will always remember as the day that you almost caught Captain Jack Sparrow!"
        },
        "email": {
          "description": "Почтовый адрес пользователя (уникальное поле).",
          "type": "string",
          "format": "email",
          "x-isnullable": false,
          "example": "captaina@blackpearl.sea"
        },
        "fullname": {
          "description": "Полное имя пользователя.",
          "type": "string",
          "x-isnullable": false,
          "example": "Captain Jack Sparrow"
        },
        "nickname": {
          "description": "Имя пользователя (уникальное поле).\nДанное поле допускает только латиницу, цифры и знак подчеркивания.\nСравнение имени регистронезависимо.\n",
          "type": "string",
          "format": "identity",
          "readOnly": true,
          "example": "j.sparrow"
        }
      }
    },
    "UserUpdate": {
      "description": "Информация о пользователе.\n",
      "type": "object",
      "properties": {
        "about": {
          "description": "Описание пользователя.",
          "type": "string",
          "format": "text",
          "example": "This is the day you will always remember as the day that you almost caught Captain Jack Sparrow!"
        },
        "email": {
          "description": "Почтовый адрес пользователя (уникальное поле).",
          "type": "string",
          "format": "email",
          "example": "captaina@blackpearl.sea"
        },
        "fullname": {
          "description": "Полное имя пользователя.",
          "type": "string",
          "example": "Captain Jack Sparrow"
        }
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "Vote": {
      "description": "Информация о голосовании пользователя.\n",
      "type": "object",
      "required": [
        "nickname",
        "voice"
      ],
      "properties": {
        "nickname": {
          "description": "Идентификатор пользователя.",
          "type": "string",
          "format": "identity",
          "x-isnullable": false
        },
        "voice": {
          "description": "Отданный голос.",
          "type": "number",
          "format": "int32",
          "enum": [
            -1,
            1
          ],
          "x-isnullable": false
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Тестовое задание для реализации проекта \"Форумы\" на курсе по базам данных в\nТехнопарке Mail.ru (https://park.mail.ru).\n",
    "title": "forum",
    "version": "0.1.0"
  },
  "basePath": "/api",
  "paths": {
    "/forum/create": {
      "post": {
        "description": "Создание нового форума.\n",
        "summary": "Создание форума",
        "operationId": "forumCreate",
        "parameters": [
          {
            "description": "Данные форума.",
            "name": "forum",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Forum"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Форум успешно создан.\nВозвращает данные созданного форума.\n",
            "schema": {
              "$ref": "#/definitions/Forum"
            }
          },
          "404": {
            "description": "Владелец форума не найден.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Форум уже присутсвует в базе данных.\nВозвращает данные ранее созданного форума.\n",
            "schema": {
              "$ref": "#/definitions/Forum"
            }
          }
        }
      }
    },
    "/forum/{slug}/create": {
      "post": {
        "description": "Добавление новой ветки обсуждения на форум.\n",
        "summary": "Создание ветки",
        "operationId": "threadCreate",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор форума.",
            "name": "slug",
            "in": "path",
            "required": true
          },
          {
            "description": "Данные ветки обсуждения.",
            "name": "thread",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ветка обсуждения успешно создана.\nВозвращает данные созданной ветки обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          },
          "404": {
            "description": "Автор ветки или форум не найдены.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Ветка обсуждения уже присутсвует в базе данных.\nВозвращает данные ранее созданной ветки обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          }
        }
      }
    },
    "/forum/{slug}/details": {
      "get": {
        "description": "Получение информации о форуме по его идентификаторе.\n",
        "summary": "Получение информации о форуме",
        "operationId": "forumGetOne",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор форума.",
            "name": "slug",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о форуме.\n",
            "schema": {
              "$ref": "#/definitions/Forum"
            }
          },
          "404": {
            "description": "Форум отсутсвует в системе.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/forum/{slug}/threads": {
      "get": {
        "description": "Получение списка ветвей обсужления данного форума.\n\nВетви обсуждения выводятся отсортированные по дате создания.\n",
        "summary": "Список ветвей обсужления форума",
        "operationId": "forumGetThreads",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор форума.",
            "name": "slug",
            "in": "path",
            "required": true
          },
          {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "format": "int32",
            "default": 100,
            "description": "Максимальное кол-во возвращаемых записей.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Дата создания ветви обсуждения, с которой будут выводиться записи\n(ветвь обсуждения с указанной датой попадает в результат выборки).\n",
            "name": "since",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Флаг сортировки по убыванию.\n",
            "name": "desc",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветках обсуждения на форуме.\n",
            "schema": {
              "$ref": "#/definitions/Threads"
            }
          },
          "404": {
            "description": "Форум отсутсвует в системе.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/forum/{slug}/users": {
      "get": {
        "description": "Получение списка пользователей, у которых есть пост или ветка обсуждения в данном форуме.\n\nПользователи выводятся отсортированные по nickname в порядке возрастания.\nПорядок сотрировки должен соответсвовать побайтовому сравнение в нижнем регистре.\n",
        "summary": "Пользователи данного форума",
        "operationId": "forumGetUsers",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор форума.",
            "name": "slug",
            "in": "path",
            "required": true
          },
          {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "format": "int32",
            "default": 100,
            "description": "Максимальное кол-во возвращаемых записей.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор пользователя, с которого будут выводиться пользоватли\n(пользователь с данным идентификатором в результат не попадает).\n",
            "name": "since",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Флаг сортировки по убыванию.\n",
            "name": "desc",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о пользователях форума.\n",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "404": {
            "description": "Форум отсутсвует в системе.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/post/{id}/details": {
      "get": {
        "description": "Получение информации о ветке обсуждения по его имени.\n",
        "summary": "Получение информации о ветке обсуждения",
        "operationId": "postGetOne",
        "parameters": [
          {
            "type": "number",
            "format": "int64",
            "description": "Идентификатор сообщения.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "user",
                "forum",
                "thread"
              ],
              "type": "string"
            },
            "description": "Включение полной информации о соответвующем объекте сообщения.\n\nЕсли тип объекта не указан, то полная информация об этих объектах не\nпередаётся.\n",
            "name": "related",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветке обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/PostFull"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Изменение сообщения на форуме.\n\nЕсли сообщение поменяло текст, то оно должно получить отметку ` + "`" + `isEdited` + "`" + `.\n",
        "summary": "Изменение сообщения",
        "operationId": "postUpdate",
        "parameters": [
          {
            "type": "number",
            "format": "int64",
            "description": "Идентификатор сообщения.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Изменения сообщения.",
            "name": "post",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о сообщении.\n",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "404": {
            "description": "Сообщение отсутсвует в форуме.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/service/clear": {
      "post": {
        "description": "Безвозвратное удаление всей пользовательской информации из базы данных.\n",
        "consumes": [
          "application/json",
          "application/octet-stream"
        ],
        "summary": "Очистка всех данных в базе",
        "operationId": "clear",
        "responses": {
          "200": {
            "description": "Очистка базы успешно завершена"
          }
        }
      }
    },
    "/service/status": {
      "get": {
        "description": "Получение инфомарции о базе данных.\n",
        "summary": "Получение инфомарции о базе данных",
        "operationId": "status",
        "responses": {
          "200": {
            "description": "Кол-во записей в базе данных, включая помеченные как \"удалённые\".\n",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/thread/{slug_or_id}/create": {
      "post": {
        "description": "Добавление новых постов в ветку обсуждения на форум.\n\nВсе посты, созданные в рамках одного вызова данного метода должны иметь одинаковую дату создания (Post.Created).\n",
        "summary": "Создание новых постов",
        "operationId": "postsCreate",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Список создаваемых постов.",
            "name": "posts",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Посты успешно созданы.\nВозвращает данные созданных постов в том же порядке, в котором их передали на вход метода.\n",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутствует в базе данных.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Хотя бы один родительский пост отсутсвует в текущей ветке обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/thread/{slug_or_id}/details": {
      "get": {
        "description": "Получение информации о ветке обсуждения по его имени.\n",
        "summary": "Получение информации о ветке обсуждения",
        "operationId": "threadGetOne",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветке обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Обновление ветки обсуждения на форуме.\n",
        "summary": "Обновление ветки",
        "operationId": "threadUpdate",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Данные ветки обсуждения.",
            "name": "thread",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThreadUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветке обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/thread/{slug_or_id}/posts": {
      "get": {
        "description": "Получение списка сообщений в данной ветке форуме.\n\nСообщения выводятся отсортированные по дате создания.\n",
        "summary": "Сообщения данной ветви обсуждения",
        "operationId": "threadGetPosts",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          },
          {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "format": "int32",
            "default": 100,
            "description": "Максимальное кол-во возвращаемых записей.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "description": "Идентификатор поста, после которого будут выводиться записи\n(пост с данным идентификатором в результат не попадает).\n",
            "name": "since",
            "in": "query"
          },
          {
            "enum": [
              "flat",
              "tree",
              "parent_tree"
            ],
            "type": "string",
            "default": "flat",
            "description": "Вид сортировки:\n\n * flat - по дате, комментарии выводятся простым списком в порядке создания;\n * tree - древовидный, комментарии выводятся отсортированные в дереве\n   по N штук;\n * parent_tree - древовидные с пагинацией по родительским (parent_tree),\n   на странице N родительских комментов и все комментарии прикрепленные\n   к ним, в древвидном отображение.\n\nПодробности: https://park.mail.ru/blog/topic/view/1191/\n",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Флаг сортировки по убыванию.\n",
            "name": "desc",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о сообщениях форума.\n",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/thread/{slug_or_id}/vote": {
      "post": {
        "description": "Изменение голоса за ветвь обсуждения.\n\nОдин пользователь учитывается только один раз и может изменить своё\nмнение.\n",
        "summary": "Проголосовать за ветвь обсуждения",
        "operationId": "threadVote",
        "parameters": [
          {
            "type": "string",
            "format": "identity",
            "description": "Идентификатор ветки обсуждения.",
            "name": "slug_or_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Информация о голосовании пользователя.",
            "name": "vote",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ветке обсуждения.\n",
            "schema": {
              "$ref": "#/definitions/Thread"
            }
          },
          "404": {
            "description": "Ветка обсуждения отсутсвует в форуме.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/{nickname}/create": {
      "post": {
        "description": "Создание нового пользователя в базе данных.\n",
        "summary": "Создание нового пользователя",
        "operationId": "userCreate",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор пользователя.",
            "name": "nickname",
            "in": "path",
            "required": true
          },
          {
            "description": "Данные пользовательского профиля.",
            "name": "profile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Пользователь успешно создан.\nВозвращает данные созданного пользователя.\n",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "409": {
            "description": "Пользователь уже присутсвует в базе данных.\nВозвращает данные ранее созданных пользователей с тем же nickname-ом иои email-ом.\n",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/user/{nickname}/profile": {
      "get": {
        "description": "Получение информации о пользователе форума по его имени.\n",
        "summary": "Получение информации о пользователе",
        "operationId": "userGetOne",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор пользователя.",
            "name": "nickname",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о пользователе.\n",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Пользователь отсутсвует в системе.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Изменение информации в профиле пользователя.\n",
        "summary": "Изменение данных о пользователе",
        "operationId": "userUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор пользователя.",
            "name": "nickname",
            "in": "path",
            "required": true
          },
          {
            "description": "Изменения профиля пользователя.",
            "name": "profile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Актуальная информация о пользователе после изменения профиля.\n",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Пользователь отсутсвует в системе.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Новые данные профиля пользователя конфликтуют с имеющимися пользователями.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Текстовое описание ошибки.\nВ процессе проверки API никаких проверок на содерижимое данного описание не делается.\n",
          "type": "string",
          "readOnly": true,
          "example": "Can't find user with id #42\n"
        }
      }
    },
    "Forum": {
      "description": "Информация о форуме.\n",
      "type": "object",
      "required": [
        "title",
        "user",
        "slug"
      ],
      "properties": {
        "posts": {
          "description": "Общее кол-во сообщений в данном форуме.\n",
          "type": "number",
          "format": "int64",
          "readOnly": true,
          "example": 200000
        },
        "slug": {
          "description": "Человекопонятный URL (https://ru.wikipedia.org/wiki/%D0%A1%D0%B5%D0%BC%D0%B0%D0%BD%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_URL), уникальное поле.",
          "type": "string",
          "format": "identity",
          "pattern": "^(\\d|\\w|-|_)*(\\w|-|_)(\\d|\\w|-|_)*$",
          "x-isnullable": false,
          "example": "pirate-stories"
        },
        "threads": {
          "description": "Общее кол-во ветвей обсуждения в данном форуме.\n",
          "type": "number",
          "format": "int32",
          "readOnly": true,
          "example": 200
        },
        "title": {
          "description": "Название форума.",
          "type": "string",
          "x-isnullable": false,
          "example": "Pirate stories"
        },
        "user": {
          "description": "Nickname пользователя, который отвечает за форум.",
          "type": "string",
          "format": "identity",
          "x-isnullable": false,
          "example": "j.sparrow"
        }
      }
    },
    "Post": {
      "description": "Сообщение внутри ветки обсуждения на форуме.\n",
      "type": "object",
      "required": [
        "author",
        "message"
      ],
      "properties": {
        "author": {
          "description": "Автор, написавший данное сообщение.",
          "type": "string",
          "format": "identity",
          "x-isnullable": false,
          "example": "j.sparrow"
        },
        "created": {
          "description": "Дата создания сообщения на форуме.",
          "type": "string",
          "format": "date-time",
          "x-isnullable": true,
          "readOnly": true
        },
        "forum": {
          "description": "Идентификатор форума (slug) данного сообещния.",
          "type": "string",
          "format": "identity",
          "readOnly": true
        },
        "id": {
          "description": "Идентификатор данного сообщения.",
          "type": "number",
          "format": "int64",
          "readOnly": true
        },
        "isEdited": {
          "description": "Истина, если данное сообщение было изменено.",
          "type": "boolean",
          "x-isnullable": false,
          "readOnly": true
        },
        "message": {
          "description": "Собственно сообщение форума.",
          "type": "string",
          "format": "text",
          "x-isnullable": false,
          "example": "We should be afraid of the Kraken."
        },
        "parent": {
          "description": "Идентификатор родительского сообщения (0 - корневое сообщение обсуждения).\n",
          "type": "number",
          "format": "int64"
        },
        "thread": {
          "description": "Идентификатор ветви (id) обсуждения данного сообещния.",
          "type": "number",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "PostFull": {
      "description": "Полная информация о сообщении, включая связанные объекты.\n",
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/User"
        },
        "forum": {
          "$ref": "#/definitions/Forum"
        },
        "post": {
          "$ref": "#/definitions/Post"
        },
        "thread": {
          "$ref": "#/definitions/Thread"
        }
      }
    },
    "PostUpdate": {
      "description": "Сообщение для обновления сообщения внутри ветки на форуме.\nПустые параметры остаются без изменений.\n",
      "type": "object",
      "properties": {
        "message": {
          "description": "Собственно сообщение форума.",
          "type": "string",
          "format": "text",
          "example": "We should be afraid of the Kraken."
        }
      }
    },
    "Posts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Post"
      }
    },
    "Status": {
      "type": "object",
      "required": [
        "user",
        "forum",
        "thread",
        "post"
      ],
      "properties": {
        "forum": {
          "description": "Кол-во разделов в базе данных.",
          "type": "number",
          "format": "int32",
          "x-isnullable": false,
          "example": 100
        },
        "post": {
          "description": "Кол-во сообщений в базе данных.",
          "type": "number",
          "format": "int64",
          "x-isnullable": false,
          "example": 1000000
        },
        "thread": {
          "description": "Кол-во веток обсуждения в базе данных.",
          "type": "number",
          "format": "int32",
          "x-isnullable": false,
          "example": 1000
        },
        "user": {
          "description": "Кол-во пользователей в базе данных.",
          "type": "number",
          "format": "int32",
          "x-isnullable": false,
          "example": 1000
        }
      }
    },
    "Thread": {
      "description": "Ветка обсуждения на форуме.\n",
      "type": "object",
      "required": [
        "title",
        "author",
        "message"
      ],
      "properties": {
        "author": {
          "description": "Пользователь, создавший данную тему.",
          "type": "string",
          "format": "identity",
          "x-isnullable": false,
          "example": "j.sparrow"
        },
        "created": {
          "description": "Дата создания ветки на форуме.",
          "type": "string",
          "format": "date-time",
          "x-isnullable": true,
          "example": "2017-01-01T00:00:00.000Z"
        },
        "forum": {
          "description": "Форум, в котором расположена данная ветка обсуждения.",
          "type": "string",
          "format": "identity",
          "readOnly": true,
          "example": "pirate-stories"
        },
        "id": {
          "description": "Идентификатор ветки обсуждения.",
          "type": "number",
          "format": "int32",
          "readOnly": true,
          "example": 42
        },
        "message": {
          "description": "Описание ветки обсуждения.",
          "type": "string",
          "format": "text",
          "x-isnullable": false,
          "example": "An urgent need to reveal the hiding place of Davy Jones. Who is willing to help in this matter?"
        },
        "slug": {
          "description": "Человекопонятный URL (https://ru.wikipedia.org/wiki/%D0%A1%D0%B5%D0%BC%D0%B0%D0%BD%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_URL).\nВ данной структуре slug опционален и не может быть числом.\n",
          "type": "string",
          "format": "identity",
          "pattern": "^(\\d|\\w|-|_)*(\\w|-|_)(\\d|\\w|-|_)*$",
          "readOnly": true,
          "example": "jones-cache"
        },
        "title": {
          "description": "Заголовок ветки обсуждения.",
          "type": "string",
          "x-isnullable": false,
          "example": "Davy Jones cache"
        },
        "votes": {
          "description": "Кол-во голосов непосредственно за данное сообщение форума.",
          "type": "number",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "ThreadUpdate": {
      "description": "Сообщение для обновления ветки обсуждения на форуме.\nПустые параметры остаются без изменений.\n",
      "type": "object",
      "properties": {
        "message": {
          "description": "Описание ветки обсуждения.",
          "type": "string",
          "format": "text",
          "example": "An urgent need to reveal the hiding place of Davy Jones. Who is willing to help in this matter?"
        },
        "title": {
          "description": "Заголовок ветки обсуждения.",
          "type": "string",
          "example": "Davy Jones cache"
        }
      }
    },
    "Threads": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Thread"
      }
    },
    "User": {
      "description": "Информация о пользователе.\n",
      "type": "object",
      "required": [
        "fullname",
        "email"
      ],
      "properties": {
        "about": {
          "description": "Описание пользователя.",
          "type": "string",
          "format": "text",
          "example": "This is the day you will always remember as the day that you almost caught Captain Jack Sparrow!"
        },
        "email": {
          "description": "Почтовый адрес пользователя (уникальное поле).",
          "type": "string",
          "format": "email",
          "x-isnullable": false,
          "example": "captaina@blackpearl.sea"
        },
        "fullname": {
          "description": "Полное имя пользователя.",
          "type": "string",
          "x-isnullable": false,
          "example": "Captain Jack Sparrow"
        },
        "nickname": {
          "description": "Имя пользователя (уникальное поле).\nДанное поле допускает только латиницу, цифры и знак подчеркивания.\nСравнение имени регистронезависимо.\n",
          "type": "string",
          "format": "identity",
          "readOnly": true,
          "example": "j.sparrow"
        }
      }
    },
    "UserUpdate": {
      "description": "Информация о пользователе.\n",
      "type": "object",
      "properties": {
        "about": {
          "description": "Описание пользователя.",
          "type": "string",
          "format": "text",
          "example": "This is the day you will always remember as the day that you almost caught Captain Jack Sparrow!"
        },
        "email": {
          "description": "Почтовый адрес пользователя (уникальное поле).",
          "type": "string",
          "format": "email",
          "example": "captaina@blackpearl.sea"
        },
        "fullname": {
          "description": "Полное имя пользователя.",
          "type": "string",
          "example": "Captain Jack Sparrow"
        }
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "Vote": {
      "description": "Информация о голосовании пользователя.\n",
      "type": "object",
      "required": [
        "nickname",
        "voice"
      ],
      "properties": {
        "nickname": {
          "description": "Идентификатор пользователя.",
          "type": "string",
          "format": "identity",
          "x-isnullable": false
        },
        "voice": {
          "description": "Отданный голос.",
          "type": "number",
          "format": "int32",
          "enum": [
            -1,
            1
          ],
          "x-isnullable": false
        }
      }
    }
  }
}`))
}
